<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mx.spring.test.data.mapper.TaskMapper">
	
	<sql id="page_sql">  limit #{start} ,#{limit}    </sql>
	
    <select id="getTasks" resultType="TaskEntity">
    	SELECT id, task_code, task_type, params, createUser, createDt, status, locationCode, 
    			testTimes, testUser, callType, callTel, callTime, timeout 
		FROM b_task    
    </select>
	
	<insert id="addTask" parameterType="TaskEntity">
			
		INSERT INTO b_task
			(task_code, task_type, params, createUser, createDt, status, locationCode, testTimes, testUser, callType, callTel, callTime, timeout) 
		VALUES 
			(#{task_code}, #{task_type}, #{params}, #{createUser}, #{createDt}, #{status}, #{locationCode}, #{testTimes}, #{testUser}, #{callType}, #{callTel}, #{callTime}, #{timeout})
			
	</insert>
	
	<select id="getBuildingList" resultType="BuildingEntity"  parameterType="BuildingEntity">	
		select  bid,bcode,bname,blocation,btype,frequency,acode,remarks,longitude,latitude 
		from  building
		<where>		
			<if test="acode != null and acode !='' ">
				AND acode = #{acode}
			</if>
			<if test="bname != null and bname !='' ">				
				AND bname like concat('%',#{bname},'%')
			</if>
		</where>	
		
	</select>
	
	<insert id="addBuilding" parameterType="BuildingEntity">
		insert building 
			( bid,bcode,bname,blocation,btype,frequency,acode,remarks,longitude,latitude )
		values 
			( #{bid},#{bcode},#{bname},#{blocation},#{btype},#{frequency},#{acode},#{remarks},#{longitude},#{latitude} )
	</insert>
	
	<update id="updateBuilding" parameterType="BuildingEntity">
	
		update building 
			set bcode=#{bcode},bname=#{bname},blocation=#{blocation},btype=#{btype},
				frequency=#{frequency},acode=#{acode},remarks=#{remarks},longitude=#{longitude},latitude=#{latitude}
		where  bid=#{bid}
	
	</update>
	<delete id="delBuilding"  parameterType="int">
		delete building where  bid=#{bid}	
	</delete>
	
	
	
	<select id="getPostionBy" parameterType="int" resultType="PostionEntity">
		select `pid` , `bid`,`pcode`,`pname`,`remarks`,`task` from position where bid=#{value}
	</select>
	<insert id="addPostion"   parameterType="PostionEntity">
		insert into position
			( `pid` , `bid`,`pcode`,`pname`,`remarks`,`task` ) 
		values 
			( #{pid} , #{bid},#{pcode},#{pname},#{remarks},#{task} )
	</insert>
	<update id="updatePostion"  parameterType="PostionEntity">
		update position 
		set  `bid`=#{bid},`pcode`=#{pcode},`pname`=#{pname},`remarks`=#{remarks},`task`=#{task}
		where pid=#{pid}
	</update>
	<delete id="delPostion" parameterType="int">
	   delete from  position where bid=#{value}
	</delete>
	
	
	<select id="getMobileList"  parameterType="MobileEntity" resultType="MobileEntity">
		select  mobileId,ecode,ename,status  
		from mobilephone	
		<where>		
			<if test="mobileId != null and mobileId !='' ">
				AND mobileId = #{mobileId}
			</if>
			<if test="status != null and status !=0 ">				
				AND mobileid not in( select phoneno from tt_phone where bid=#{status})
			</if>
		</where>	
	</select>
	<insert id="addMobile"  parameterType="MobileEntity" >
		insert into mobilephone
			( mobileId,ecode,ename,status )
		values
			( #{mobileId},#{ecode},#{ename},#{status} )
	</insert>
	<update id="updateMobile"  parameterType="MobileEntity" >
	`	update mobilephone
			set ecode=#{ecode},ename=#{ename},status=#{status}
		where mobileId=#{mobileId}
	</update>
	<delete id="delMobile"  parameterType="string">
			delete  mobilephone  where mobileId=#{mobileId}
	</delete>
	
	
	
	<select id="getBuildingForTask" parameterType="string"  resultType="BuildingEntity">
		select a.* 
		from building a inner join tt_phone b
			on a.bid=b.bid where b.phoneNo=#{value}
	</select>
	<select id="getPostionForTask"  resultType="PostionEntity" parameterType="MobileEntity">
		select c.* 
		from building a  inner join tt_phone b
			on a.bid=b.bid inner join position c
			on a.bid=c.bid
		where b.phoneNo=#{mobileId} and  a.bid=#{status}
	
	</select>
	
	
	<insert id="addTT_Phone"  parameterType="TPhoneEntity">
		insert into tt_phone 
			( bid,phoneNo )
		values 
			(#{bid},#{phoneNo})
	
	</insert>
	<select id="checkExistTT_Phone" parameterType="TPhoneEntity" resultType="int">
		select Count(0) as n from tt_phone 
		where bid =#{bid} and phoneNo=#{phoneNo} 
	</select>
	
	<select id="getTestUserList" parameterType="int" resultType="MobileEntity">
		select a.* from  mobilephone a inner join tt_phone b
		on a.mobileId=b.phoneNo 
		where b.bid=#{value}
	
	</select>
	
	<delete id="delTT_Phone" parameterType="TPhoneEntity">
		delete tt_phone where bid=#{bid} and phoneNo= #{phoneNo}
	</delete>
	
</mapper>